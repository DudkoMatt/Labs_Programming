#include <iostream>
#include "my_lib.h"

using namespace std;

/*
 * Лабораторная работа #2. Классы.
 *
 * Согласно варианту описать указанные классы (варианты распределяются преподавателем лично). Написать программу,
 * использующую описанные классы: инициализация переменных (ввод пользователя), выполнение действий с экземплярами
 * класса (в зависимости от дальнейшего ввода пользователя).
 *
 * Описания и реализация должны находиться в разных файлах. Доступ к полям класса – только через методы. Внешние
 * функции для работы с данными класса не допускаются. Перегрузка стандартных арифметических операций для класса
 * (только в виде методов класса) – в зависимости от задания и здравого смысла (уместна консультация с
 * преподавателем практики).
 *
 * Дополнительно оценивается, если меню программы будет реализовано с помощью класса. Также возможно использование
 * такого класса "меню" другого студента с указанием его авторства (использование чужого «меню», естественно,
 * дополнительно не оценивается).
 *
 * Всюду под «выводом на экран» подразумевается вывод необходимой информации об объекте в текстовом виде. Например:
 * Для комплексного числа: 5.67 – 2.34i
 * Для квадратного многочлена: 3.0 x^2 – 2.5 x + 7.0
 * Для вектора в R^3 : (5.5, –2.6, 1.0)
 *
 *
 *
 * Вариант 5:
 * Очередь строк.
 *
 * Примечание:
 * Максимальная длина очереди задается при инициализации и не может быть изменена позднее. Каждая строка
 * ограничена по длине 255 символами.
 *
 * Конструкторы:
 * По умолчанию.
 * Копирования
 * Максимальная длина.
 * Очередь строк.
 *
 * Функциональность:
 * Длина очереди.
 * Добавление строки в очередь.
 * Изъятие строки из очереди.
 * Просмотр последнего элемента.
 * Просмотр первого элемента.
 * Вывод на экран.
 *
 */

int main() {
    StringQueue queue(10);
    queue.push("One");
    queue.push("Two");
    queue.push("Three");
    queue.push("Four");
    queue.print();
    cout << "Amount of entries: " << queue.getAmountInQueue() << "\n";
    cout << "First: " << queue.show_first() << "\n";
    cout << "Last: " << queue.show_last() << "\n";

    cout << "\nPop first element: " << queue.pop() << "\n";
    cout << "Print queue: ";
    queue.print();
    cout << "Amount of entries: " << queue.getAmountInQueue() << "\n";
    cout << "First: " << queue.show_first() << "\n";
    cout << "Last: " << queue.show_last() << "\n";
    return 0;
}
